{"ast":null,"code":"var _jsxFileName = \"/Users/fouadiiiiiinho/Desktop/leeto-integration-test/src/App.tsx\";\nimport React from 'react';\nimport './App.css';\nimport { Comment, Avatar, Form, Button, List, Input } from 'antd';\nimport moment from 'moment';\nimport 'antd/dist/antd.css';\nconst TextArea = Input.TextArea;\n\nconst CommentList = ({\n  comments\n}) => React.createElement(List, {\n  dataSource: comments,\n  header: \"\".concat(comments.length, \" \").concat(comments.length > 1 ? 'replies' : 'reply'),\n  itemLayout: \"horizontal\",\n  renderItem: props => React.createElement(Comment, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  })),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n});\n\nconst Editor = ({\n  onChange,\n  onSubmit,\n  submitting,\n  value\n}) => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}, React.createElement(Form.Item, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}, React.createElement(TextArea, {\n  rows: 4,\n  onChange: onChange,\n  value: value,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n})), React.createElement(Form.Item, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n}, React.createElement(Button, {\n  htmlType: \"submit\",\n  loading: submitting,\n  onClick: onSubmit,\n  type: \"primary\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}, \"Add Comment\")));\n\nconst App = () => {\n  state = {\n    comments: [],\n    submitting: false,\n    value: ''\n  };\n\n  handleSubmit = () => {\n    if (!this.state.value) {\n      return;\n    }\n\n    this.setState({\n      submitting: true\n    });\n    setTimeout(() => {\n      this.setState({\n        submitting: false,\n        value: '',\n        comments: [{\n          author: 'Han Solo',\n          avatar: 'https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png',\n          content: React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56\n            },\n            __self: this\n          }, this.state.value),\n          datetime: moment().fromNow()\n        }, ...this.state.comments]\n      });\n    }, 1000);\n  };\n\n  handleChange = e => {\n    this.setState({\n      value: e.target.value\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"aside\", {\n    className: \"Aside\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"Content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    className: \"App-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"Content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    size: 32,\n    icon: \"user\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  })))), React.createElement(Button, {\n    type: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Button\"));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/fouadiiiiiinho/Desktop/leeto-integration-test/src/App.tsx"],"names":["React","Comment","Avatar","Form","Button","List","Input","moment","TextArea","CommentList","comments","length","props","Editor","onChange","onSubmit","submitting","value","App","state","handleSubmit","setState","setTimeout","author","avatar","content","datetime","fromNow","handleChange","e","target"],"mappings":"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","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Comment, Avatar, Form, Button, List, Input } from 'antd'\nimport moment from 'moment'\nimport 'antd/dist/antd.css'\n\nconst { TextArea } = Input;\n\nconst CommentList = ({ comments }) => (\n  <List\n    dataSource={comments}\n    header={`${comments.length} ${comments.length > 1 ? 'replies' : 'reply'}`}\n    itemLayout=\"horizontal\"\n    renderItem={props => <Comment {...props} />}\n  />\n);\n\nconst Editor = ({ onChange, onSubmit, submitting, value }) => (\n  <div>\n    <Form.Item>\n      <TextArea rows={4} onChange={onChange} value={value} />\n    </Form.Item>\n    <Form.Item>\n      <Button htmlType=\"submit\" loading={submitting} onClick={onSubmit} type=\"primary\">\n        Add Comment\n      </Button>\n    </Form.Item>\n  </div>\n);\n\nconst App: React.FC = () => {\n  state = {\n    comments: [],\n    submitting: false,\n    value: '',\n  };\n\n  handleSubmit = () => {\n    if (!this.state.value) {\n      return;\n    }\n\n    this.setState({\n      submitting: true,\n    });\n\n    setTimeout(() => {\n      this.setState({\n        submitting: false,\n        value: '',\n        comments: [\n          {\n            author: 'Han Solo',\n            avatar: 'https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png',\n            content: <p>{this.state.value}</p>,\n            datetime: moment().fromNow(),\n          },\n          ...this.state.comments,\n        ],\n      });\n    }, 1000);\n  };\n\n  handleChange = e => {\n    this.setState({\n      value: e.target.value,\n    });\n  };\n  return (\n    <div className=\"App\">\n      <aside className=\"Aside\">\n\n      </aside>\n      <div className=\"Content\">\n        <header className=\"App-header\">\n\n        </header>\n        <div className=\"Content\">\n          <div>\n            <Avatar size={32} icon=\"user\" />\n          </div>\n        </div>\n      </div>\n      <Button type=\"primary\">Button</Button>\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}